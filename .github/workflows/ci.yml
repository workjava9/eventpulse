name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports: [ "5432:5432" ]
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      redis:
        image: redis:7
        ports: [ "6379:6379" ]
      zookeeper:
        image: bitnami/zookeeper:3.8
        ports: [ "2181:2181" ]
      kafka:
        image: bitnami/kafka:3.4.0
        env:
          KAFKA_BROKER_ID: 1
          KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
          KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
          KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
          KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
          KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
          ALLOW_PLAINTEXT_LISTENER: "yes"
        ports: [ "9092:9092" ]
        options: >-
          --health-cmd="bash -c '</dev/tcp/localhost/9092'"
          --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - run: chmod +x ./gradlew
      - name: Run tests
        run: ./gradlew clean test
        env:
          SPRING_PROFILES_ACTIVE: test

  build-image:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: gradle
      - run: chmod +x ./gradlew
      - name: Build jar (skip tests)
        run: ./gradlew -x test bootJar
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build & push image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Docker/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.sha }}
            ghcr.io/${{ github.repository }}:latest
